#
# PgpChCannedSequences.db
#
# Contains various sequence record's to aid in configuring timing channels
#	
# Required macros:
#	PGP_CH			- Prefix for pgpRogue channel

# Configure LCLS-I Timing via EvrV2 firmware
record( seq, "$(PGP_CH):EvrV2Config" )
{
	field( DESC, "Configure EvrV2 Timing" )

	# Configure EvrV2 registers
	field( DLYA, "0.0" ) field( DOLA, "2" ) field( LNKA, "$(PGP_CH):EvrV2:RateType       PP NMS" )
	field( DLYB, "0.0" ) field( DOLB, "2" ) field( LNKB, "$(PGP_CH):EvrV2:DestType       PP NMS" )
	field( DLYC, "0.1" ) field( DOLC, "1" ) field( LNKC, "$(PGP_CH):EvrV2:EnableReg      PP NMS" )
	field( DLYF, "0.1" ) field( DOLF, "1" ) field( LNKF, "$(PGP_CH):EvrV2:EnableTrig     PP NMS" )

	info( autosaveFields, "DESC" )
}

# StartRun
record( seq, "$(PGP_CH):SeqStartRun" )
{
	field( DESC, "Arm EventBuilder and enable triggers" )
	# Arm EventBuilder for data stream
	field( DLY1, "0" ) field( DOL1, "0" ) field( LNK1, "$(PGP_CH):EventBuilder:Blowoff PP NMS" )
	# Reset EventBuilder Pipeline
	field( DLY2, "0" ) field( DOL2, "1" ) field( LNK2, "$(PGP_CH):EventBuilder:SoftRst PP NMS" )
	field( DLY3, "0" ) field( DOL3, "0" ) field( LNK3, "$(PGP_CH):EventBuilder:SoftRst PP NMS" )
	# Enable triggering
	field( DLY4, "0" ) field( DOL4, "1" ) field( LNK4, "$(PGP_CH):TrEvent:MasterEnable PP NMS" )

	info( autosaveFields, "DESC" )
}

# StopRun
record( seq, "$(PGP_CH):SeqStopRun" )
{
	field( DESC, "Stop triggers & blow off pipeline data" )
	# Disable triggering
	field( DLY1, "0" ) field( DOL1, "0" ) field( LNK1, "$(PGP_CH):TrEvent:MasterEnable PP NMS" )
	# Blow off data in EventBuilder pipeline
	field( DLY2, "0" ) field( DOL2, "1" ) field( LNK2, "$(PGP_CH):EventBuilder:Blowoff PP NMS" )

	info( autosaveFields, "DESC" )
}
