#
# PgpCannedSequences.db
#
# Contains various sequence record's to aid in changing timing modes
#	
# Required macros:
#	PGP				- Prefix for pgpRogue IOC

# Select LCLS-I Timing
record( seq, "$(PGP):SeqLcls1Timing" )
{
	field( DESC, "Select LCLS-I Timing" )

	#	First Disable triggers
	field( DLY0, "0" ) field( DOL0, "0" ) field( LNK0, "$(PGP):ChAll:EvrV2:EnableReg  PP NMS" )

	# Disable MiniTpg and set ModeSelEn to UseClkSel
	field( DLY1, "0" ) field( DOL1, "0" ) field( LNK1, "$(PGP):Timing:UseMiniTpg    PP NMS" )
	field( DLY2, "0" ) field( DOL2, "0" ) field( LNK2, "$(PGP):Timing:ModeSelEn     PP NMS" )

	# Assert RxPllReset for 1 sec 
	field( DLY3, "0" ) field( DOL3, "1" ) field( LNK3, "$(PGP):Timing:RxPllReset    PP NMS" )
	field( DLY4, "1" ) field( DOL4, "0" ) field( LNK4, "$(PGP):Timing:RxPllReset    PP NMS" )

	# Select LCLS-I Clock
	field( DLY5, "0" ) field( DOL5, "0" ) field( LNK5, "$(PGP):Timing:ClkSel        PP NMS" )
	field( DLY6, "0" ) field( DOL6, "0" ) field( LNK6, "$(PGP):Timing:ModeSel       PP NMS" )

	# Assert C_RxReset for 1 sec 
	field( DLY7, "0" ) field( DOL7, "1" ) field( LNK7, "$(PGP):Timing:C_RxReset     PP NMS" )
	field( DLY8, "1" ) field( DOL8, "0" ) field( LNK8, "$(PGP):Timing:C_RxReset     PP NMS" )

	# Reset the latching register
	field( DLY9, ".1") field( DOL9, "0" ) field( LNK9, "$(PGP):Timing:RxDown        PP NMS" )

	# Set EventBuilder Bypass to mask out XPM Timing Message for LCLS1 timing 
	field( DLYA, "0" ) field( DOLA, "4" ) field( LNKA, "$(PGP):ChAll:EventBuilder:BypassXPM  PP NMS" )

	# Set RateType to ControlWord for LCLS1 timing rates
	field( DLYB, "0" ) field( DOLB, "2" ) field( LNKB, "$(PGP):ChAll:EvrV2:RateTypeControlWord PP NMS" )

	# Set RateSel for each channel to that channel's LCLS1 timing rate
	field( DLYC, "0" ) field( DOLC, "1" ) field( LNKC, "$(PGP):ChAll:Lcls1:RateSel.PROC  PP NMS" )

	info( autosaveFields, "DESC" )
}

# Select TpgMini Internally generated LCLS-I Clock
record( seq, "$(PGP):SeqTpgMiniTiming" )
{
	field( DESC, "Select TpgMini Internal LCLS-I Clock" )

	#	First Disable triggers
	field( DLY0, "0" ) field( DOL0, "0" ) field( LNK0, "$(PGP):ChAll:EvrV2:EnableReg  PP NMS" )

	# Disable MiniTpg and set ModeSelEn to UseClkSel
	field( DLY1, "0" ) field( DOL1, "0" ) field( LNK1, "$(PGP):Timing:UseMiniTpg    PP NMS" )
	field( DLY2, "0" ) field( DOL2, "0" ) field( LNK2, "$(PGP):Timing:ModeSelEn     PP NMS" )

	# Assert RxPllReset for 1 sec 
	field( DLY3, "0" ) field( DOL3, "1" ) field( LNK3, "$(PGP):Timing:RxPllReset    PP NMS" )
	field( DLY4, "1" ) field( DOL4, "0" ) field( LNK4, "$(PGP):Timing:RxPllReset    PP NMS" )

	# Select LCLS-I Clock
	field( DLY5, "0" ) field( DOL5, "0" ) field( LNK5, "$(PGP):Timing:ClkSel        PP NMS" )
	field( DLY6, "0" ) field( DOL6, "0" ) field( LNK6, "$(PGP):Timing:ModeSel       PP NMS" )

	# Assert C_RxReset for 1 sec 
	field( DLY7, "0" ) field( DOL7, "1" ) field( LNK7, "$(PGP):Timing:C_RxReset     PP NMS" )
	field( DLY8, "1" ) field( DOL8, "0" ) field( LNK8, "$(PGP):Timing:C_RxReset     PP NMS" )

	# Reset the latching register
	field( DLY9, ".1") field( DOL9, "0" ) field( LNK9, "$(PGP):Timing:RxDown        PP NMS" )

	# Set EventBuilder Bypass to mask out XPM Timing Message for LCLS1 timing 
	field( DLYA, "0" ) field( DOLA, "4" ) field( LNKA, "$(PGP):ChAll:EventBuilder:BypassXPM  PP NMS" )

	# Set RateType to ControlWord for LCLS1 timing rates
	field( DLYB, "0" ) field( DOLB, "2" ) field( LNKB, "$(PGP):ChAll:EvrV2:RateTypeControlWord PP NMS" )

	# Set RateSel for each channel to that channel's LCLS1 timing rate
	field( DLYC, "0" ) field( DOLC, "1" ) field( LNKC, "$(PGP):ChAll:Lcls1:RateSel.PROC  PP NMS" )

	# Enable MiniTpg
	field( DLYF, "0" ) field( DOLF, "1" ) field( LNKF, "$(PGP):Timing:UseMiniTpg    PP NMS" )

	info( autosaveFields, "DESC" )
}

# Select LCLS-II Timing
record( seq, "$(PGP):SeqLcls2Timing" )
{
	field( DESC, "Select LCLS-II Timing" )

	#	First Disable triggers
	field( DLY0, "0" ) field( DOL0, "0" ) field( LNK0, "$(PGP):ChAll:EvrV2:EnableReg  PP NMS" )

	# Disable MiniTpg and set ModeSelEn to UseClkSel
	field( DLY1, "0" ) field( DOL1, "0" ) field( LNK1, "$(PGP):Timing:UseMiniTpg    PP NMS" )
	field( DLY2, "0" ) field( DOL2, "0" ) field( LNK2, "$(PGP):Timing:ModeSelEn     PP NMS" )

	# Assert RxPllReset for 1 sec 
	field( DLY3, "0" ) field( DOL3, "1" ) field( LNK3, "$(PGP):Timing:RxPllReset    PP NMS" )
	field( DLY4, "1" ) field( DOL4, "0" ) field( LNK4, "$(PGP):Timing:RxPllReset    PP NMS" )

	# Select LCLS-II Clock
	field( DLY5, "0" ) field( DOL5, "1" ) field( LNK5, "$(PGP):Timing:ClkSel        PP NMS" )
	field( DLY6, "0" ) field( DOL6, "1" ) field( LNK6, "$(PGP):Timing:ModeSel       PP NMS" )

	# Assert C_RxReset for 1 sec 
	field( DLY7, "0" ) field( DOL7, "1" ) field( LNK7, "$(PGP):Timing:C_RxReset     PP NMS" )
	field( DLY8, "1" ) field( DOL8, "0" ) field( LNK8, "$(PGP):Timing:C_RxReset     PP NMS" )

	# Reset the latching register
	field( DLY9, ".1") field( DOL9, "0" ) field( LNK9, "$(PGP):Timing:RxDown        PP NMS" )

	# Set EventBuilder Bypass to mask out XPM Timing Message for LCLS2 timing 
	field( DLYA, "0" ) field( DOLA, "4" ) field( LNKA, "$(PGP):ChAll:EventBuilder:BypassXPM  PP NMS" )

	# Set RateType to FixedRates for LCLS2 timing rates
	field( DLYB, "0" ) field( DOLB, "0" ) field( LNKB, "$(PGP):ChAll:EvrV2:RateTypeControlWord PP NMS" )

	# Set RateSel for each channel to that channel's LCLS2 timing rate
	field( DLYC, "0" ) field( DOLC, "1" ) field( LNKC, "$(PGP):ChAll:Lcls2:RateSel.PROC  PP NMS" )

	info( autosaveFields, "DESC" )
	#	info( autosaveFields, "DESC DOL1 DLY1 DOL2 DLY2 DOL3 DLY3 DOL4 DLY4 DOL5 DLY5 DOL6 DLY6 DOL7 DLY7 DOL8 DLY8 DOL9 DLY9 DOLA DLYA" )
}

# Select XpmMini Internally generated LCLS-II Clock
record( seq, "$(PGP):SeqXpmMiniTiming" )
{
	field( DESC, "Select XpmMini Internal LCLS-II Clock" )

	#	First Disable triggers
	field( DLY0, "0" ) field( DOL0, "0" ) field( LNK0, "$(PGP):ChAll:EvrV2:EnableReg  PP NMS" )

	# Disable MiniTpg and set ModeSelEn to UseClkSel
	field( DLY1, "0" ) field( DOL1, "0" ) field( LNK1, "$(PGP):Timing:UseMiniTpg    PP NMS" )
	field( DLY2, "0" ) field( DOL2, "0" ) field( LNK2, "$(PGP):Timing:ModeSelEn     PP NMS" )

	# Assert RxPllReset for 1 sec 
	field( DLY3, "0" ) field( DOL3, "1" ) field( LNK3, "$(PGP):Timing:RxPllReset    PP NMS" )
	field( DLY4, "1" ) field( DOL4, "0" ) field( LNK4, "$(PGP):Timing:RxPllReset    PP NMS" )

	# Select LCLS-II Clock
	field( DLY5, "0" ) field( DOL5, "1" ) field( LNK5, "$(PGP):Timing:ClkSel        PP NMS" )
	field( DLY6, "0" ) field( DOL6, "1" ) field( LNK6, "$(PGP):Timing:ModeSel       PP NMS" )

	# Assert C_RxReset for 1 sec 
	field( DLY7, "0" ) field( DOL7, "1" ) field( LNK7, "$(PGP):Timing:C_RxReset     PP NMS" )
	field( DLY8, "1" ) field( DOL8, "0" ) field( LNK8, "$(PGP):Timing:C_RxReset     PP NMS" )

	# Reset the latching register
	field( DLY9, ".1") field( DOL9, "0" ) field( LNK9, "$(PGP):Timing:RxDown        PP NMS" )

	# Set EventBuilder Bypass to mask out XPM Timing Message for LCLS2 timing 
	field( DLYA, "0" ) field( DOLA, "4" ) field( LNKA, "$(PGP):ChAll:EventBuilder:BypassXPM  PP NMS" )

	# Set RateType to FixedRates for LCLS2 timing rates
	field( DLYB, "0" ) field( DOLB, "0" ) field( LNKB, "$(PGP):ChAll:EvrV2:RateTypeControlWord PP NMS" )

	# Set RateSel for each channel to that channel's LCLS2 timing rate
	field( DLYC, "0" ) field( DOLC, "1" ) field( LNKC, "$(PGP):ChAll:Lcls2:RateSel.PROC  PP NMS" )

	# Enable MiniTpg
	field( DLYD, "1" ) field( DOLD, "1" ) field( LNKD, "$(PGP):Timing:UseMiniTpg    PP NMS" )
	field( DLYE, "0" ) field( DOLE, "1" ) field( LNKE, "$(PGP):XpmMini:HwEnable     PP NMS" )
#	field( DLYE, "0" ) field( DOLE, "0" ) field( LNKE, "$(PGP):XpmMini:Link         PP NMS" )

	# Enable XpmMini Select
	field( DLYF, "0" ) field( DOLF, "1" ) field( LNKF, "$(PGP):XpmMini:Config_L0Select_Enabled PP NMS" )

	info( autosaveFields, "DESC" )
}

record( dfanout, "$(PGP):ChAll:EventBuilder:BypassXPM" )
{
	field( DESC, "Bypass XPM DAQ msgs in EventBuilder" )
	field( DOL,  "4" )
	field( OUTA, "$(PGP):Ch0:EventBuilder:Bypass  PP NMS" )
#	field( OUTB, "$(PGP):Ch1:EventBuilder:Bypass  PP NMS" )
#	field( OUTC, "$(PGP):Ch2:EventBuilder:Bypass  PP NMS" )
#	field( OUTD, "$(PGP):Ch3:EventBuilder:Bypass  PP NMS" )
}

record( dfanout, "$(PGP):ChAll:EvrV2:RateTypeControlWord" )
{
	field( DESC, "Set RateType to ControlWord for LCLS1" )
	field( DOL,  "2" )
	field( OUTA, "$(PGP):Ch0:EvrV2:RateType  PP NMS" )
#	field( OUTB, "$(PGP):Ch1:EvrV2:RateType  PP NMS" )
#	field( OUTC, "$(PGP):Ch2:EvrV2:RateType  PP NMS" )
#	field( OUTD, "$(PGP):Ch3:EvrV2:RateType  PP NMS" )
}

record( seq, "$(PGP):ChAll:Lcls1:RateSel" )
{
	field( DESC, "Select Lcls1:RateSel on all channels" )
	field( DLY0, "0" ) field( DOL0, "$(PGP):Ch0:Lcls1:RateSel" ) field( LNK0, "$(PGP):Ch0:EvrV2:RateSel  PP NMS" )
#	field( DLY1, "0" ) field( DOL1, "$(PGP):Ch1:Lcls1:RateSel" ) field( LNK1, "$(PGP):Ch1:EvrV2:RateSel  PP NMS" )
#	field( DLY2, "0" ) field( DOL2, "$(PGP):Ch2:Lcls1:RateSel" ) field( LNK2, "$(PGP):Ch2:EvrV2:RateSel  PP NMS" )
#	field( DLY3, "0" ) field( DOL3, "$(PGP):Ch3:Lcls1:RateSel" ) field( LNK3, "$(PGP):Ch3:EvrV2:RateSel  PP NMS" )
}

record( seq, "$(PGP):ChAll:Lcls2:RateSel" )
{
	field( DESC, "Select Lcls2:RateSel on all channels" )
	field( DLY0, "0" ) field( DOL0, "$(PGP):Ch0:Lcls2:RateSel" ) field( LNK0, "$(PGP):Ch0:EvrV2:RateSel  PP NMS" )
#	field( DLY1, "0" ) field( DOL1, "$(PGP):Ch1:Lcls2:RateSel" ) field( LNK1, "$(PGP):Ch1:EvrV2:RateSel  PP NMS" )
#	field( DLY2, "0" ) field( DOL2, "$(PGP):Ch2:Lcls2:RateSel" ) field( LNK2, "$(PGP):Ch2:EvrV2:RateSel  PP NMS" )
#	field( DLY3, "0" ) field( DOL3, "$(PGP):Ch3:Lcls2:RateSel" ) field( LNK3, "$(PGP):Ch3:EvrV2:RateSel  PP NMS" )
}
