alias( $(PGP):AdcReadout0:AdcASample0_RBV", "$(PGP):AdcReadout0:AdcASample0" )
alias( $(PGP):AdcReadout0:AdcASample1_RBV", "$(PGP):AdcReadout0:AdcASample1" )
alias( $(PGP):AdcReadout0:AdcASample2_RBV", "$(PGP):AdcReadout0:AdcASample2" )
alias( $(PGP):AdcReadout0:AdcASample3_RBV", "$(PGP):AdcReadout0:AdcASample3" )
alias( $(PGP):AdcReadout0:AdcASample4_RBV", "$(PGP):AdcReadout0:AdcASample4" )
alias( $(PGP):AdcReadout0:AdcASample5_RBV", "$(PGP):AdcReadout0:AdcASample5" )
alias( $(PGP):AdcReadout0:AdcASample6_RBV", "$(PGP):AdcReadout0:AdcASample6" )
alias( $(PGP):AdcReadout0:AdcASample7_RBV", "$(PGP):AdcReadout0:AdcASample7" )
alias( $(PGP):AdcReadout0:AdcBSample0_RBV", "$(PGP):AdcReadout0:AdcBSample0" )
alias( $(PGP):AdcReadout0:AdcBSample1_RBV", "$(PGP):AdcReadout0:AdcBSample1" )
alias( $(PGP):AdcReadout0:AdcBSample2_RBV", "$(PGP):AdcReadout0:AdcBSample2" )
alias( $(PGP):AdcReadout0:AdcBSample3_RBV", "$(PGP):AdcReadout0:AdcBSample3" )
alias( $(PGP):AdcReadout0:AdcBSample4_RBV", "$(PGP):AdcReadout0:AdcBSample4" )
alias( $(PGP):AdcReadout0:AdcBSample5_RBV", "$(PGP):AdcReadout0:AdcBSample5" )
alias( $(PGP):AdcReadout0:AdcBSample6_RBV", "$(PGP):AdcReadout0:AdcBSample6" )
alias( $(PGP):AdcReadout0:AdcBSample7_RBV", "$(PGP):AdcReadout0:AdcBSample7" )
alias( $(PGP):AdcReadout1:AdcASample0_RBV", "$(PGP):AdcReadout1:AdcASample0" )
alias( $(PGP):AdcReadout1:AdcASample1_RBV", "$(PGP):AdcReadout1:AdcASample1" )
alias( $(PGP):AdcReadout1:AdcASample2_RBV", "$(PGP):AdcReadout1:AdcASample2" )
alias( $(PGP):AdcReadout1:AdcASample3_RBV", "$(PGP):AdcReadout1:AdcASample3" )
alias( $(PGP):AdcReadout1:AdcASample4_RBV", "$(PGP):AdcReadout1:AdcASample4" )
alias( $(PGP):AdcReadout1:AdcASample5_RBV", "$(PGP):AdcReadout1:AdcASample5" )
alias( $(PGP):AdcReadout1:AdcASample6_RBV", "$(PGP):AdcReadout1:AdcASample6" )
alias( $(PGP):AdcReadout1:AdcASample7_RBV", "$(PGP):AdcReadout1:AdcASample7" )
alias( $(PGP):AdcReadout1:AdcBSample0_RBV", "$(PGP):AdcReadout1:AdcBSample0" )
alias( $(PGP):AdcReadout1:AdcBSample1_RBV", "$(PGP):AdcReadout1:AdcBSample1" )
alias( $(PGP):AdcReadout1:AdcBSample2_RBV", "$(PGP):AdcReadout1:AdcBSample2" )
alias( $(PGP):AdcReadout1:AdcBSample3_RBV", "$(PGP):AdcReadout1:AdcBSample3" )
alias( $(PGP):AdcReadout1:AdcBSample4_RBV", "$(PGP):AdcReadout1:AdcBSample4" )
alias( $(PGP):AdcReadout1:AdcBSample5_RBV", "$(PGP):AdcReadout1:AdcBSample5" )
alias( $(PGP):AdcReadout1:AdcBSample6_RBV", "$(PGP):AdcReadout1:AdcBSample6" )
alias( $(PGP):AdcReadout1:AdcBSample7_RBV", "$(PGP):AdcReadout1:AdcBSample7" )
alias( $(PGP):AdcReadout2:AdcASample0_RBV", "$(PGP):AdcReadout2:AdcASample0" )
alias( $(PGP):AdcReadout2:AdcASample1_RBV", "$(PGP):AdcReadout2:AdcASample1" )
alias( $(PGP):AdcReadout2:AdcASample2_RBV", "$(PGP):AdcReadout2:AdcASample2" )
alias( $(PGP):AdcReadout2:AdcASample3_RBV", "$(PGP):AdcReadout2:AdcASample3" )
alias( $(PGP):AdcReadout2:AdcASample4_RBV", "$(PGP):AdcReadout2:AdcASample4" )
alias( $(PGP):AdcReadout2:AdcASample5_RBV", "$(PGP):AdcReadout2:AdcASample5" )
alias( $(PGP):AdcReadout2:AdcASample6_RBV", "$(PGP):AdcReadout2:AdcASample6" )
alias( $(PGP):AdcReadout2:AdcASample7_RBV", "$(PGP):AdcReadout2:AdcASample7" )
alias( $(PGP):AdcReadout2:AdcBSample0_RBV", "$(PGP):AdcReadout2:AdcBSample0" )
alias( $(PGP):AdcReadout2:AdcBSample1_RBV", "$(PGP):AdcReadout2:AdcBSample1" )
alias( $(PGP):AdcReadout2:AdcBSample2_RBV", "$(PGP):AdcReadout2:AdcBSample2" )
alias( $(PGP):AdcReadout2:AdcBSample3_RBV", "$(PGP):AdcReadout2:AdcBSample3" )
alias( $(PGP):AdcReadout2:AdcBSample4_RBV", "$(PGP):AdcReadout2:AdcBSample4" )
alias( $(PGP):AdcReadout2:AdcBSample5_RBV", "$(PGP):AdcReadout2:AdcBSample5" )
alias( $(PGP):AdcReadout2:AdcBSample6_RBV", "$(PGP):AdcReadout2:AdcBSample6" )
alias( $(PGP):AdcReadout2:AdcBSample7_RBV", "$(PGP):AdcReadout2:AdcBSample7" )
alias( $(PGP):AdcReadout3:AdcASample0_RBV", "$(PGP):AdcReadout3:AdcASample0" )
alias( $(PGP):AdcReadout3:AdcASample1_RBV", "$(PGP):AdcReadout3:AdcASample1" )
alias( $(PGP):AdcReadout3:AdcASample2_RBV", "$(PGP):AdcReadout3:AdcASample2" )
alias( $(PGP):AdcReadout3:AdcASample3_RBV", "$(PGP):AdcReadout3:AdcASample3" )
alias( $(PGP):AdcReadout3:AdcASample4_RBV", "$(PGP):AdcReadout3:AdcASample4" )
alias( $(PGP):AdcReadout3:AdcASample5_RBV", "$(PGP):AdcReadout3:AdcASample5" )
alias( $(PGP):AdcReadout3:AdcASample6_RBV", "$(PGP):AdcReadout3:AdcASample6" )
alias( $(PGP):AdcReadout3:AdcASample7_RBV", "$(PGP):AdcReadout3:AdcASample7" )
alias( $(PGP):AdcReadout3:AdcBSample0_RBV", "$(PGP):AdcReadout3:AdcBSample0" )
alias( $(PGP):AdcReadout3:AdcBSample1_RBV", "$(PGP):AdcReadout3:AdcBSample1" )
alias( $(PGP):AdcReadout3:AdcBSample2_RBV", "$(PGP):AdcReadout3:AdcBSample2" )
alias( $(PGP):AdcReadout3:AdcBSample3_RBV", "$(PGP):AdcReadout3:AdcBSample3" )
alias( $(PGP):AdcReadout3:AdcBSample4_RBV", "$(PGP):AdcReadout3:AdcBSample4" )
alias( $(PGP):AdcReadout3:AdcBSample5_RBV", "$(PGP):AdcReadout3:AdcBSample5" )
alias( $(PGP):AdcReadout3:AdcBSample6_RBV", "$(PGP):AdcReadout3:AdcBSample6" )
alias( $(PGP):AdcReadout3:AdcBSample7_RBV", "$(PGP):AdcReadout3:AdcBSample7" )
alias( $(PGP):AxiVersion:FpgaVersion_RBV", "$(PGP):AxiVersion:FpgaVersion" )
alias( $(PGP):AxiVersion:UpTime_RBV", "$(PGP):AxiVersion:UpTime" )
alias( $(PGP):EventBuilder:BlowoffExt_RBV", "$(PGP):EventBuilder:BlowoffExt" )
alias( $(PGP):EventBuilder:DataCnt0_RBV", "$(PGP):EventBuilder:DataCnt0" )
alias( $(PGP):EventBuilder:DataCnt10_RBV", "$(PGP):EventBuilder:DataCnt10" )
alias( $(PGP):EventBuilder:DataCnt1_RBV", "$(PGP):EventBuilder:DataCnt1" )
alias( $(PGP):EventBuilder:DataCnt2_RBV", "$(PGP):EventBuilder:DataCnt2" )
alias( $(PGP):EventBuilder:DataCnt3_RBV", "$(PGP):EventBuilder:DataCnt3" )
alias( $(PGP):EventBuilder:DataCnt4_RBV", "$(PGP):EventBuilder:DataCnt4" )
alias( $(PGP):EventBuilder:DataCnt5_RBV", "$(PGP):EventBuilder:DataCnt5" )
alias( $(PGP):EventBuilder:DataCnt6_RBV", "$(PGP):EventBuilder:DataCnt6" )
alias( $(PGP):EventBuilder:DataCnt7_RBV", "$(PGP):EventBuilder:DataCnt7" )
alias( $(PGP):EventBuilder:DataCnt8_RBV", "$(PGP):EventBuilder:DataCnt8" )
alias( $(PGP):EventBuilder:DataCnt9_RBV", "$(PGP):EventBuilder:DataCnt9" )
alias( $(PGP):EventBuilder:NullCnt0_RBV", "$(PGP):EventBuilder:NullCnt0" )
alias( $(PGP):EventBuilder:NullCnt10_RBV", "$(PGP):EventBuilder:NullCnt10" )
alias( $(PGP):EventBuilder:NullCnt1_RBV", "$(PGP):EventBuilder:NullCnt1" )
alias( $(PGP):EventBuilder:NullCnt2_RBV", "$(PGP):EventBuilder:NullCnt2" )
alias( $(PGP):EventBuilder:NullCnt3_RBV", "$(PGP):EventBuilder:NullCnt3" )
alias( $(PGP):EventBuilder:NullCnt4_RBV", "$(PGP):EventBuilder:NullCnt4" )
alias( $(PGP):EventBuilder:NullCnt5_RBV", "$(PGP):EventBuilder:NullCnt5" )
alias( $(PGP):EventBuilder:NullCnt6_RBV", "$(PGP):EventBuilder:NullCnt6" )
alias( $(PGP):EventBuilder:NullCnt7_RBV", "$(PGP):EventBuilder:NullCnt7" )
alias( $(PGP):EventBuilder:NullCnt8_RBV", "$(PGP):EventBuilder:NullCnt8" )
alias( $(PGP):EventBuilder:NullCnt9_RBV", "$(PGP):EventBuilder:NullCnt9" )
alias( $(PGP):EventBuilder:NUM_SLAVES_G_RBV", "$(PGP):EventBuilder:NUM_SLAVES_G" )
alias( $(PGP):EventBuilder:State_RBV", "$(PGP):EventBuilder:State" )
alias( $(PGP):EventBuilder:TimeoutDropCnt0_RBV", "$(PGP):EventBuilder:TimeoutDropCnt0" )
alias( $(PGP):EventBuilder:TimeoutDropCnt10_RBV", "$(PGP):EventBuilder:TimeoutDropCnt10" )
alias( $(PGP):EventBuilder:TimeoutDropCnt1_RBV", "$(PGP):EventBuilder:TimeoutDropCnt1" )
alias( $(PGP):EventBuilder:TimeoutDropCnt2_RBV", "$(PGP):EventBuilder:TimeoutDropCnt2" )
alias( $(PGP):EventBuilder:TimeoutDropCnt3_RBV", "$(PGP):EventBuilder:TimeoutDropCnt3" )
alias( $(PGP):EventBuilder:TimeoutDropCnt4_RBV", "$(PGP):EventBuilder:TimeoutDropCnt4" )
alias( $(PGP):EventBuilder:TimeoutDropCnt5_RBV", "$(PGP):EventBuilder:TimeoutDropCnt5" )
alias( $(PGP):EventBuilder:TimeoutDropCnt6_RBV", "$(PGP):EventBuilder:TimeoutDropCnt6" )
alias( $(PGP):EventBuilder:TimeoutDropCnt7_RBV", "$(PGP):EventBuilder:TimeoutDropCnt7" )
alias( $(PGP):EventBuilder:TimeoutDropCnt8_RBV", "$(PGP):EventBuilder:TimeoutDropCnt8" )
alias( $(PGP):EventBuilder:TimeoutDropCnt9_RBV", "$(PGP):EventBuilder:TimeoutDropCnt9" )
alias( $(PGP):EventBuilder:TransactionCnt_RBV", "$(PGP):EventBuilder:TransactionCnt" )
alias( $(PGP):EventBuilder:TRANS_TDEST_G_RBV", "$(PGP):EventBuilder:TRANS_TDEST_G" )
alias( $(PGP):EvrV2:Count_RBV", "$(PGP):EvrV2:Count" )
alias( $(PGP):Fast:Integrators:AdcIntegral0_RBV", "$(PGP):Fast:Integrators:AdcIntegral0" )
alias( $(PGP):Fast:Integrators:AdcIntegral1_RBV", "$(PGP):Fast:Integrators:AdcIntegral1" )
alias( $(PGP):Fast:Integrators:AdcIntegral2_RBV", "$(PGP):Fast:Integrators:AdcIntegral2" )
alias( $(PGP):Fast:Integrators:AdcIntegral3_RBV", "$(PGP):Fast:Integrators:AdcIntegral3" )
alias( $(PGP):Fast:Integrators:AdcIntegral4_RBV", "$(PGP):Fast:Integrators:AdcIntegral4" )
alias( $(PGP):Fast:Integrators:AdcIntegral5_RBV", "$(PGP):Fast:Integrators:AdcIntegral5" )
alias( $(PGP):Fast:Integrators:AdcIntegral6_RBV", "$(PGP):Fast:Integrators:AdcIntegral6" )
alias( $(PGP):Fast:Integrators:AdcIntegral7_RBV", "$(PGP):Fast:Integrators:AdcIntegral7" )
alias( $(PGP):Integrators:AdcIntegral0_RBV", "$(PGP):Integrators:AdcIntegral0" )
alias( $(PGP):Integrators:AdcIntegral1_RBV", "$(PGP):Integrators:AdcIntegral1" )
alias( $(PGP):Integrators:AdcIntegral2_RBV", "$(PGP):Integrators:AdcIntegral2" )
alias( $(PGP):Integrators:AdcIntegral3_RBV", "$(PGP):Integrators:AdcIntegral3" )
alias( $(PGP):Integrators:AdcIntegral4_RBV", "$(PGP):Integrators:AdcIntegral4" )
alias( $(PGP):Integrators:AdcIntegral5_RBV", "$(PGP):Integrators:AdcIntegral5" )
alias( $(PGP):Integrators:AdcIntegral6_RBV", "$(PGP):Integrators:AdcIntegral6" )
alias( $(PGP):Integrators:AdcIntegral7_RBV", "$(PGP):Integrators:AdcIntegral7" )
alias( $(PGP):Integrators:Baseline0_RBV", "$(PGP):Integrators:Baseline0" )
alias( $(PGP):Integrators:Baseline1_RBV", "$(PGP):Integrators:Baseline1" )
alias( $(PGP):Integrators:Baseline2_RBV", "$(PGP):Integrators:Baseline2" )
alias( $(PGP):Integrators:Baseline3_RBV", "$(PGP):Integrators:Baseline3" )
alias( $(PGP):Integrators:Baseline4_RBV", "$(PGP):Integrators:Baseline4" )
alias( $(PGP):Integrators:Baseline5_RBV", "$(PGP):Integrators:Baseline5" )
alias( $(PGP):Integrators:Baseline6_RBV", "$(PGP):Integrators:Baseline6" )
alias( $(PGP):Integrators:Baseline7_RBV", "$(PGP):Integrators:Baseline7" )
alias( $(PGP):Integrators:IntensityRaw_RBV", "$(PGP):Integrators:IntensityRaw" )
alias( $(PGP):Integrators:IntFifoPauseCnt_RBV", "$(PGP):Integrators:IntFifoPauseCnt" )
alias( $(PGP):Integrators:PositionXRaw_RBV", "$(PGP):Integrators:PositionXRaw" )
alias( $(PGP):Integrators:PositionYRaw_RBV", "$(PGP):Integrators:PositionYRaw" )
alias( $(PGP):Integrators:ProcFifoPauseCnt_RBV", "$(PGP):Integrators:ProcFifoPauseCnt" )
alias( $(PGP):Integrators:TrigCnt_RBV", "$(PGP):Integrators:TrigCnt" )
alias( $(PGP):PgpMon0:RxStatus:EbOverflowCnt_RBV", "$(PGP):PgpMon0:RxStatus:EbOverflowCnt" )
alias( $(PGP):PgpMon0:RxStatus:FrameCnt_RBV", "$(PGP):PgpMon0:RxStatus:FrameCnt" )
alias( $(PGP):PgpMon0:RxStatus:LinkDownCnt_RBV", "$(PGP):PgpMon0:RxStatus:LinkDownCnt" )
alias( $(PGP):PgpMon0:RxStatus:LinkErrorCnt_RBV", "$(PGP):PgpMon0:RxStatus:LinkErrorCnt" )
alias( $(PGP):PgpMon0:RxStatus:LinkReady_RBV", alias( $(PGP):PgpMon0:RxStatus:LinkReadyCnt", 
	"$(PGP):PgpMon0:RxStatus:LinkReadyCnt" ) "$(PGP):PgpMon0:RxStatus:LinkReady_RBV" )
alias( $(PGP):PgpMon0:RxStatus:PhyActive_RBV", alias( $(PGP):PgpMon0:RxStatus:PhyActiveCnt", 
	"$(PGP):PgpMon0:RxStatus:PhyActiveCnt" ) "$(PGP):PgpMon0:RxStatus:PhyActive_RBV" )
alias( $(PGP):PgpMon0:RxStatus:RemOverflowCnt0_RBV", "$(PGP):PgpMon0:RxStatus:RemOverflowCnt0" )
alias( $(PGP):PgpMon0:RxStatus:RemOverflowCnt1_RBV", "$(PGP):PgpMon0:RxStatus:RemOverflowCnt1" )
alias( $(PGP):PgpMon0:RxStatus:RemOverflowCnt2_RBV", "$(PGP):PgpMon0:RxStatus:RemOverflowCnt2" )
alias( $(PGP):PgpMon0:RxStatus:RemOverflowCnt3_RBV", "$(PGP):PgpMon0:RxStatus:RemOverflowCnt3" )
alias( $(PGP):PgpMon0:RxStatus:RemRxLinkReady_RBV", alias( $(PGP):PgpMon0:RxStatus:RemRxLinkReadyCnt", 
	"$(PGP):PgpMon0:RxStatus:RemRxLinkReadyCnt" ) "$(PGP):PgpMon0:RxStatus:RemRxLinkReady_RBV" )
alias( $(PGP):PgpMon0:TxStatus:FrameCnt_RBV", "$(PGP):PgpMon0:TxStatus:FrameCnt" )
alias( $(PGP):PgpMon0:TxStatus:LinkReady_RBV", alias( $(PGP):PgpMon0:TxStatus:LinkReadyCnt", 
	"$(PGP):PgpMon0:TxStatus:LinkReadyCnt" ) "$(PGP):PgpMon0:TxStatus:LinkReady_RBV" )
alias( $(PGP):PgpMon0:TxStatus:LocOverflowCnt0_RBV", "$(PGP):PgpMon0:TxStatus:LocOverflowCnt0" )
alias( $(PGP):PgpMon0:TxStatus:LocOverflowCnt1_RBV", "$(PGP):PgpMon0:TxStatus:LocOverflowCnt1" )
alias( $(PGP):PgpMon0:TxStatus:LocOverflowCnt2_RBV", "$(PGP):PgpMon0:TxStatus:LocOverflowCnt2" )
alias( $(PGP):PgpMon0:TxStatus:LocOverflowCnt3_RBV", "$(PGP):PgpMon0:TxStatus:LocOverflowCnt3" )
alias( $(PGP):PgpMon0:TxStatus:PhyActive_RBV", alias( $(PGP):PgpMon0:TxStatus:PhyActiveCnt", 
	"$(PGP):PgpMon0:TxStatus:PhyActiveCnt" ) "$(PGP):PgpMon0:TxStatus:PhyActive_RBV" )
alias( $(PGP):PgpMon1:RxStatus:EbOverflowCnt_RBV", "$(PGP):PgpMon1:RxStatus:EbOverflowCnt" )
alias( $(PGP):PgpMon1:RxStatus:FrameCnt_RBV", "$(PGP):PgpMon1:RxStatus:FrameCnt" )
alias( $(PGP):PgpMon1:RxStatus:LinkDownCnt_RBV", "$(PGP):PgpMon1:RxStatus:LinkDownCnt" )
alias( $(PGP):PgpMon1:RxStatus:LinkErrorCnt_RBV", "$(PGP):PgpMon1:RxStatus:LinkErrorCnt" )
alias( $(PGP):PgpMon1:RxStatus:LinkReady_RBV", alias( $(PGP):PgpMon1:RxStatus:LinkReadyCnt", 
	"$(PGP):PgpMon1:RxStatus:LinkReadyCnt" ) "$(PGP):PgpMon1:RxStatus:LinkReady_RBV" )
alias( $(PGP):PgpMon1:RxStatus:PhyActive_RBV", alias( $(PGP):PgpMon1:RxStatus:PhyActiveCnt", 
	"$(PGP):PgpMon1:RxStatus:PhyActiveCnt" ) "$(PGP):PgpMon1:RxStatus:PhyActive_RBV" )
alias( $(PGP):PgpMon1:RxStatus:RemOverflowCnt0_RBV", "$(PGP):PgpMon1:RxStatus:RemOverflowCnt0" )
alias( $(PGP):PgpMon1:RxStatus:RemOverflowCnt1_RBV", "$(PGP):PgpMon1:RxStatus:RemOverflowCnt1" )
alias( $(PGP):PgpMon1:RxStatus:RemOverflowCnt2_RBV", "$(PGP):PgpMon1:RxStatus:RemOverflowCnt2" )
alias( $(PGP):PgpMon1:RxStatus:RemOverflowCnt3_RBV", "$(PGP):PgpMon1:RxStatus:RemOverflowCnt3" )
alias( $(PGP):PgpMon1:RxStatus:RemRxLinkReady_RBV", alias( $(PGP):PgpMon1:RxStatus:RemRxLinkReadyCnt", 
	"$(PGP):PgpMon1:RxStatus:RemRxLinkReadyCnt" ) "$(PGP):PgpMon1:RxStatus:RemRxLinkReady_RBV" )
alias( $(PGP):PgpMon1:TxStatus:FrameCnt_RBV", "$(PGP):PgpMon1:TxStatus:FrameCnt" )
alias( $(PGP):PgpMon1:TxStatus:LinkReady_RBV", alias( $(PGP):PgpMon1:TxStatus:LinkReadyCnt", 
	"$(PGP):PgpMon1:TxStatus:LinkReadyCnt" ) "$(PGP):PgpMon1:TxStatus:LinkReady_RBV" )
alias( $(PGP):PgpMon1:TxStatus:LocOverflowCnt0_RBV", "$(PGP):PgpMon1:TxStatus:LocOverflowCnt0" )
alias( $(PGP):PgpMon1:TxStatus:LocOverflowCnt1_RBV", "$(PGP):PgpMon1:TxStatus:LocOverflowCnt1" )
alias( $(PGP):PgpMon1:TxStatus:LocOverflowCnt2_RBV", "$(PGP):PgpMon1:TxStatus:LocOverflowCnt2" )
alias( $(PGP):PgpMon1:TxStatus:LocOverflowCnt3_RBV", "$(PGP):PgpMon1:TxStatus:LocOverflowCnt3" )
alias( $(PGP):PgpMon1:TxStatus:PhyActive_RBV", alias( $(PGP):PgpMon1:TxStatus:PhyActiveCnt", 
	"$(PGP):PgpMon1:TxStatus:PhyActiveCnt" ) "$(PGP):PgpMon1:TxStatus:PhyActive_RBV" )
alias( $(PGP):RawBuffers:FifoPauseCnt_RBV", "$(PGP):RawBuffers:FifoPauseCnt" )
alias( $(PGP):RawBuffers:TrigCnt_RBV", "$(PGP):RawBuffers:TrigCnt" )
alias( $(PGP):Sfp0:Diagnostics0_RBV", "$(PGP):Sfp0:Diagnostics0" )
alias( $(PGP):Sfp0:Diagnostics10_RBV", "$(PGP):Sfp0:Diagnostics10" )
alias( $(PGP):Sfp0:Diagnostics11_RBV", "$(PGP):Sfp0:Diagnostics11" )
alias( $(PGP):Sfp0:Diagnostics12_RBV", "$(PGP):Sfp0:Diagnostics12" )
alias( $(PGP):Sfp0:Diagnostics13_RBV", "$(PGP):Sfp0:Diagnostics13" )
alias( $(PGP):Sfp0:Diagnostics1_RBV", "$(PGP):Sfp0:Diagnostics1" )
alias( $(PGP):Sfp0:Diagnostics2_RBV", "$(PGP):Sfp0:Diagnostics2" )
alias( $(PGP):Sfp0:Diagnostics3_RBV", "$(PGP):Sfp0:Diagnostics3" )
alias( $(PGP):Sfp0:Diagnostics4_RBV", "$(PGP):Sfp0:Diagnostics4" )
alias( $(PGP):Sfp0:Diagnostics5_RBV", "$(PGP):Sfp0:Diagnostics5" )
alias( $(PGP):Sfp0:Diagnostics6_RBV", "$(PGP):Sfp0:Diagnostics6" )
alias( $(PGP):Sfp0:Diagnostics7_RBV", "$(PGP):Sfp0:Diagnostics7" )
alias( $(PGP):Sfp0:Diagnostics8_RBV", "$(PGP):Sfp0:Diagnostics8" )
alias( $(PGP):Sfp0:Diagnostics9_RBV", "$(PGP):Sfp0:Diagnostics9" )
alias( $(PGP):Sfp1:Diagnostics0_RBV", "$(PGP):Sfp1:Diagnostics0" )
alias( $(PGP):Sfp1:Diagnostics10_RBV", "$(PGP):Sfp1:Diagnostics10" )
alias( $(PGP):Sfp1:Diagnostics11_RBV", "$(PGP):Sfp1:Diagnostics11" )
alias( $(PGP):Sfp1:Diagnostics12_RBV", "$(PGP):Sfp1:Diagnostics12" )
alias( $(PGP):Sfp1:Diagnostics13_RBV", "$(PGP):Sfp1:Diagnostics13" )
alias( $(PGP):Sfp1:Diagnostics1_RBV", "$(PGP):Sfp1:Diagnostics1" )
alias( $(PGP):Sfp1:Diagnostics2_RBV", "$(PGP):Sfp1:Diagnostics2" )
alias( $(PGP):Sfp1:Diagnostics3_RBV", "$(PGP):Sfp1:Diagnostics3" )
alias( $(PGP):Sfp1:Diagnostics4_RBV", "$(PGP):Sfp1:Diagnostics4" )
alias( $(PGP):Sfp1:Diagnostics5_RBV", "$(PGP):Sfp1:Diagnostics5" )
alias( $(PGP):Sfp1:Diagnostics6_RBV", "$(PGP):Sfp1:Diagnostics6" )
alias( $(PGP):Sfp1:Diagnostics7_RBV", "$(PGP):Sfp1:Diagnostics7" )
alias( $(PGP):Sfp1:Diagnostics8_RBV", "$(PGP):Sfp1:Diagnostics8" )
alias( $(PGP):Sfp1:Diagnostics9_RBV", "$(PGP):Sfp1:Diagnostics9" )
alias( $(PGP):Sfp2:Diagnostics0_RBV", "$(PGP):Sfp2:Diagnostics0" )
alias( $(PGP):Sfp2:Diagnostics10_RBV", "$(PGP):Sfp2:Diagnostics10" )
alias( $(PGP):Sfp2:Diagnostics11_RBV", "$(PGP):Sfp2:Diagnostics11" )
alias( $(PGP):Sfp2:Diagnostics12_RBV", "$(PGP):Sfp2:Diagnostics12" )
alias( $(PGP):Sfp2:Diagnostics13_RBV", "$(PGP):Sfp2:Diagnostics13" )
alias( $(PGP):Sfp2:Diagnostics1_RBV", "$(PGP):Sfp2:Diagnostics1" )
alias( $(PGP):Sfp2:Diagnostics2_RBV", "$(PGP):Sfp2:Diagnostics2" )
alias( $(PGP):Sfp2:Diagnostics3_RBV", "$(PGP):Sfp2:Diagnostics3" )
alias( $(PGP):Sfp2:Diagnostics4_RBV", "$(PGP):Sfp2:Diagnostics4" )
alias( $(PGP):Sfp2:Diagnostics5_RBV", "$(PGP):Sfp2:Diagnostics5" )
alias( $(PGP):Sfp2:Diagnostics6_RBV", "$(PGP):Sfp2:Diagnostics6" )
alias( $(PGP):Sfp2:Diagnostics7_RBV", "$(PGP):Sfp2:Diagnostics7" )
alias( $(PGP):Sfp2:Diagnostics8_RBV", "$(PGP):Sfp2:Diagnostics8" )
alias( $(PGP):Sfp2:Diagnostics9_RBV", "$(PGP):Sfp2:Diagnostics9" )
alias( $(PGP):Sfp3:Diagnostics0_RBV", "$(PGP):Sfp3:Diagnostics0" )
alias( $(PGP):Sfp3:Diagnostics10_RBV", "$(PGP):Sfp3:Diagnostics10" )
alias( $(PGP):Sfp3:Diagnostics11_RBV", "$(PGP):Sfp3:Diagnostics11" )
alias( $(PGP):Sfp3:Diagnostics12_RBV", "$(PGP):Sfp3:Diagnostics12" )
alias( $(PGP):Sfp3:Diagnostics13_RBV", "$(PGP):Sfp3:Diagnostics13" )
alias( $(PGP):Sfp3:Diagnostics1_RBV", "$(PGP):Sfp3:Diagnostics1" )
alias( $(PGP):Sfp3:Diagnostics2_RBV", "$(PGP):Sfp3:Diagnostics2" )
alias( $(PGP):Sfp3:Diagnostics3_RBV", "$(PGP):Sfp3:Diagnostics3" )
alias( $(PGP):Sfp3:Diagnostics4_RBV", "$(PGP):Sfp3:Diagnostics4" )
alias( $(PGP):Sfp3:Diagnostics5_RBV", "$(PGP):Sfp3:Diagnostics5" )
alias( $(PGP):Sfp3:Diagnostics6_RBV", "$(PGP):Sfp3:Diagnostics6" )
alias( $(PGP):Sfp3:Diagnostics7_RBV", "$(PGP):Sfp3:Diagnostics7" )
alias( $(PGP):Sfp3:Diagnostics8_RBV", "$(PGP):Sfp3:Diagnostics8" )
alias( $(PGP):Sfp3:Diagnostics9_RBV", "$(PGP):Sfp3:Diagnostics9" )
alias( $(PGP):SystemRegs:TempAnaRaw0_RBV", "$(PGP):SystemRegs:TempAnaRaw0" )
alias( $(PGP):SystemRegs:TempAnaRaw1_RBV", "$(PGP):SystemRegs:TempAnaRaw1" )
alias( $(PGP):SystemRegs:TempDigRaw0_RBV", "$(PGP):SystemRegs:TempDigRaw0" )
alias( $(PGP):SystemRegs:TempDigRaw1_RBV", "$(PGP):SystemRegs:TempDigRaw1" )
alias( $(PGP):Timing:eofCount_RBV", "$(PGP):Timing:eofCount" )
alias( $(PGP):Timing:FidCount_RBV", "$(PGP):Timing:FidCount" )
alias( $(PGP):TimingFrameRx:RxClkCount_RBV", "$(PGP):TimingFrameRx:RxClkCount" )
alias( $(PGP):TimingFrameRx:RxRstCount_RBV", "$(PGP):TimingFrameRx:RxRstCount" )
alias( $(PGP):Timing:RxLinkUp_RBV", "$(PGP):Timing:RxLinkUp" )
alias( $(PGP):Timing:sofCount_RBV", "$(PGP):Timing:sofCount" )
alias( $(PGP):TrEvent:FifoOverflow_RBV", "$(PGP):TrEvent:FifoOverflow" )
alias( $(PGP):TrEvent:FifoPause_RBV", "$(PGP):TrEvent:FifoPause" )
alias( $(PGP):TrEvent:FifoWrCnt_RBV", "$(PGP):TrEvent:FifoWrCnt" )
alias( $(PGP):TrEvent:L0Count_RBV", "$(PGP):TrEvent:L0Count" )
alias( $(PGP):TrEvent:L1AcceptCount_RBV", "$(PGP):TrEvent:L1AcceptCount" )
alias( $(PGP):TrEvent:L1RejectCount_RBV", "$(PGP):TrEvent:L1RejectCount" )
alias( $(PGP):TrEvent:NotPauseToTrig_RBV", "$(PGP):TrEvent:NotPauseToTrig" )
alias( $(PGP):TrEvent:PauseToTrig_RBV", "$(PGP):TrEvent:PauseToTrig" )
alias( $(PGP):TrEvent:TransitionCount_RBV", "$(PGP):TrEvent:TransitionCount" )
alias( $(PGP):TrEvent:TriggerCount_RBV", "$(PGP):TrEvent:TriggerCount" )
alias( $(PGP):TrEvent:XpmMessageCount_RBV", "$(PGP):TrEvent:XpmMessageCount" )
alias( $(PGP):TrEvent:XpmMsg:PartitionDelay0_RBV", "$(PGP):TrEvent:XpmMsg:PartitionDelay0" )
alias( $(PGP):TrEvent:XpmMsg:PartitionDelay1_RBV", "$(PGP):TrEvent:XpmMsg:PartitionDelay1" )
alias( $(PGP):TrEvent:XpmMsg:PartitionDelay2_RBV", "$(PGP):TrEvent:XpmMsg:PartitionDelay2" )
alias( $(PGP):TrEvent:XpmMsg:PartitionDelay3_RBV", "$(PGP):TrEvent:XpmMsg:PartitionDelay3" )
alias( $(PGP):TrEvent:XpmMsg:PartitionDelay4_RBV", "$(PGP):TrEvent:XpmMsg:PartitionDelay4" )
alias( $(PGP):TrEvent:XpmMsg:PartitionDelay5_RBV", "$(PGP):TrEvent:XpmMsg:PartitionDelay5" )
alias( $(PGP):TrEvent:XpmMsg:PartitionDelay6_RBV", "$(PGP):TrEvent:XpmMsg:PartitionDelay6" )
alias( $(PGP):TrEvent:XpmMsg:PartitionDelay7_RBV", "$(PGP):TrEvent:XpmMsg:PartitionDelay7" )
alias( $(PGP):TrEvent:XpmMsg:RxId_RBV", "$(PGP):TrEvent:XpmMsg:RxId" )
alias( $(PGP):TrEvent:XpmOverflow_RBV", "$(PGP):TrEvent:XpmOverflow" )
alias( $(PGP):TrEvent:XpmPause_RBV", "$(PGP):TrEvent:XpmPause" )
