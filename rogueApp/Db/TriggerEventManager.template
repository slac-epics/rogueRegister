#
# TriggerEventManager rogue PVs
#
# Required macros:
#	P				- Prefix
#	R				- Region, common camera PV prefix is $(P)$(R)
#	B				- Board number
#	L				- Lane number
#	F				- Feb number
#	FL				- Feb lane
#
# Relationship between Lane number, Feb number, and Feb lane
#	One Channel Feb Firmware
#	L		F		FL
#	0		0		0
#	1		1		0
#	2		2		0
#	3		3		0
#	Two Channel Feb Firmware
#	L		F		FL
#	0		0		0
#	1		0		1
#	2		1		0
#	3		1		1
#
# Optional macros
#	TIMEOUT			- Defaults to 1 sec
#

# LCLS-I Dest Select
record( mbbi, "$(P)$(R)EvrV2:DestSel_RBV" )
{
	field( DESC, "LCLS-I Dest Select" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkPcie.Hsio.TimingRx.TriggerEventManager.EvrV2CoreTriggers.EvrV2ChannelReg[$(L)].DestSel" )
	field( DTYP, "RogueMBBI" )
	field( ZRVL, "0" ) field( ZRST, "Inclusive" )
	field( ONVL, "1" ) field( ONST, "Exclusive" )
	field( TWVL, "2" ) field( TWST, "Don't care" )
	field( THVL, "3" ) field( THST, "Reserved" )
	info( autosaveFields, "" )
}

record( mbbo, "$(P)$(R)EvrV2:DestSel" )
{
	field( DESC, "LCLS-I Dest Select" )
	field( OUT,  "@B$(B) L$(L) ClinkDevRoot.ClinkPcie.Hsio.TimingRx.TriggerEventManager.EvrV2CoreTriggers.EvrV2ChannelReg[$(L)].DestSel" )
	field( DTYP, "RogueMBBO" )
	field( ZRVL, "0" ) field( ZRST, "Inclusive" )
	field( ONVL, "1" ) field( ONST, "Exclusive" )
	field( TWVL, "2" ) field( TWST, "Don't care" )
	field( THVL, "3" ) field( THST, "Reserved" )
	field( PINI, "YES" )
	field( FLNK, "$(P)$(R)EvrV2:DestSel_RBV" )
	info( autosaveFields, "VAL" )
}

# LCLS-I Dest Type
record( mbbi, "$(P)$(R)EvrV2:DestType_RBV" )
{
	field( DESC, "LCLS-I Dest Type" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkPcie.Hsio.TimingRx.TriggerEventManager.EvrV2CoreTriggers.EvrV2ChannelReg[$(L)].DestType" )
	field( DTYP, "RogueMBBI" )
	field( ZRVL, "0" ) field( ZRST, "BeamRequest" )
	field( ONVL, "1" ) field( ONST, "NotBeamRequest" )
	field( TWVL, "2" ) field( TWST, "All" )
	field( THVL, "3" ) field( THST, "Invalid" )
	info( autosaveFields, "" )
}

record( mbbo, "$(P)$(R)EvrV2:DestType" )
{
	field( DESC, "LCLS-I Dest Type" )
	field( OUT,  "@B$(B) L$(L) ClinkDevRoot.ClinkPcie.Hsio.TimingRx.TriggerEventManager.EvrV2CoreTriggers.EvrV2ChannelReg[$(L)].DestType" )
	field( DTYP, "RogueMBBO" )
	field( DOL,  "2" )
	field( ZRVL, "0" ) field( ZRST, "BeamRequest" )
	field( ONVL, "1" ) field( ONST, "NotBeamRequest" )
	field( TWVL, "2" ) field( TWST, "All" )
	field( THVL, "3" ) field( THST, "Invalid" )
	field( PINI, "YES" )
	field( FLNK, "$(P)$(R)EvrV2:DestType_RBV" )
	info( autosaveFields, "VAL" )
}

# LCLS-I Rate Type
record( mbbi, "$(P)$(R)EvrV2:RateType_RBV" )
{
	field( DESC, "LCLS-I Rate Type" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkPcie.Hsio.TimingRx.TriggerEventManager.EvrV2CoreTriggers.EvrV2ChannelReg[$(L)].RateType" )
	field( DTYP, "RogueMBBI" )
	field( ZRVL, "0" ) field( ZRST, "FixedRates" )
	field( ONVL, "1" ) field( ONST, "AcRates" )
	field( TWVL, "2" ) field( TWST, "ControlWord" )
	field( THVL, "3" ) field( THST, "INVALID" )
	info( autosaveFields, "" )
}

record( mbbo, "$(P)$(R)EvrV2:RateType" )
{
	field( DESC, "LCLS-I Rate Type" )
	field( OUT,  "@B$(B) L$(L) ClinkDevRoot.ClinkPcie.Hsio.TimingRx.TriggerEventManager.EvrV2CoreTriggers.EvrV2ChannelReg[$(L)].RateType" )
	field( DTYP, "RogueMBBO" )
	field( DOL,  "2" )
	field( ZRVL, "0" ) field( ZRST, "FixedRates" )
	field( ONVL, "1" ) field( ONST, "AcRates" )
	field( TWVL, "2" ) field( TWST, "ControlWord" )
	field( THVL, "3" ) field( THST, "INVALID" )
	field( PINI, "YES" )
	field( FLNK, "$(P)$(R)EvrV2:RateType_RBV" )
	info( autosaveFields, "" )
}

# LCLS-I Rate Select
record( longin, "$(P)$(R)EvrV2:RateSel_RBV" )
{
	field( DESC, "LCLS-I Event Code" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkPcie.Hsio.TimingRx.TriggerEventManager.EvrV2CoreTriggers.EvrV2ChannelReg[$(L)].RateSel" )
	field( DTYP, "RogueLI" )
	info( autosaveFields, "" )
}
alias( "$(P)$(R)EvrV2:RateSel_RBV", "$(P)$(R)EvrV2:EventCode_RBV" )

record( longout, "$(P)$(R)EvrV2:RateSel" )
{
	field( DESC, "Ch$(L) LCLS-I EventCode" )
	field( OUT,  "@B$(B) L$(L) ClinkDevRoot.ClinkPcie.Hsio.TimingRx.TriggerEventManager.EvrV2CoreTriggers.EvrV2ChannelReg[$(L)].RateSel" )
	field( DTYP, "RogueLO" )
	field( PINI, "YES" )
	field( FLNK, "$(P)$(R)EvrV2:RateSel_RBV" )
	info( autosaveFields, "VAL" )
}
alias( "$(P)$(R)EvrV2:RateSel", "$(P)$(R)EvrV2:EventCode" )

